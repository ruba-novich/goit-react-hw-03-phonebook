{"version":3,"sources":["Components/SearchFilter/SearchFilter.module.css","Components/Container/Container.module.css","Components/ContactForm/ContactForm.module.css","Components/Container/Container.js","Components/Section/Section.js","Components/ContactForm/ContactForm.js","Components/SearchFilter/SearchFilter.js","Components/ContactList/ContactList.js","App.js","index.js","Components/ContactList/ContactList.module.css","Components/Section/Section.module.css"],"names":["module","exports","Container","children","className","styles","Section","title","section","ContactForm","state","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","id","handleSubmit","preventDefault","props","onSubmitForm","reset","this","onSubmit","form","htmlFor","label","type","input","pattern","required","onChange","btn","Component","SearchFilter","onChangeFilter","lable","filters","ContactList","contacts","onDeleteContact","list","map","item","onClick","App","filter","formSubmitHandler","contact","some","alert","prevState","getVisibleContact","toLowerCase","includes","idContactDel","changeFilter","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ba2f037.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"lable\":\"SearchFilter_lable__3VFEJ\",\"filters\":\"SearchFilter_filters__3sE-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__3zMUa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__jajMC\",\"lable\":\"ContactForm_lable__2THSF\",\"input\":\"ContactForm_input__3BXsl\",\"btn\":\"ContactForm_btn__3tqtq\"};","import { div } from 'prelude-ls';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      id: uuidv4(),\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmitForm(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.label}>\n          {' '}\n          Name\n          <br />\n          <input\n            type=\"text\"\n            className={styles.input}\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            id={this.nameInputId}\n            value={name}\n          ></input>\n        </label>\n        <label htmlFor={this.numberInputId} className={styles.label}>\n          {' '}\n          Number\n          <br />\n          <input\n            type=\"tel\"\n            className={styles.input}\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            value={number}\n          ></input>\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SearchFilter.module.css';\n\nconst SearchFilter = ({ value = '', onChangeFilter }) => (\n  <label className={styles.lable}>\n    Find contact by name\n    <br />\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChangeFilter}\n      className={styles.filters}\n    ></input>\n  </label>\n);\n\nSearchFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default SearchFilter;\n","import React from 'react';\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => (\n  <ul className={styles.list}>\n    {contacts.map(({ name, number, id }) => (\n      <li key={id} className={styles.item}>\n        {name}: {number}\n        <button onClick={() => onDeleteContact(id)} className={styles.btn}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n};\n\nexport default ContactList;\n","import React, { Component } from 'react';\n\nimport Container from './Components/Container';\nimport Section from './Components/Section';\nimport ContactForm from './Components/ContactForm';\nimport SearchFilter from './Components/SearchFilter';\nimport ContactList from './Components/ContactList';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  formSubmitHandler = contact => {\n    this.state.contacts.some(({ name }) => name === contact.name)\n      ? alert(`${contact.name} is alredy in contacts`)\n      : this.setState(prevState => ({\n          contacts: [contact, ...prevState.contacts],\n        }));\n  };\n\n  getVisibleContact = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  onDeleteContact = idContactDel => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(({ id }) => id !== idContactDel),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    return (\n      <Container>\n        <Section title=\"PhoneBook\">\n          <ContactForm onSubmitForm={this.formSubmitHandler} />\n        </Section>\n        <Section title=\"Contacts\">\n          <SearchFilter value={filter} onChangeFilter={this.changeFilter} />\n          <ContactList\n            contacts={this.getVisibleContact()}\n            onDeleteContact={this.onDeleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3_RD9\",\"item\":\"ContactList_item__35bSy\",\"btn\":\"ContactList_btn__2ZNNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1vDQq\",\"title\":\"Section_title__1eqJ2\"};"],"sourceRoot":""}